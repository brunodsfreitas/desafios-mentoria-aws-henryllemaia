* Nat Gateway

* EC2 + VPC + SSH + SSM + INSTANCE-CONNECT

* VPC
* VPC Endpoint + SSM + EC2 INSTANCE-CONNECT

#!/bin/bash
echo "ECS_CLUSTER=MyCluster" >> /etc/ecs/ecs.config

#user_data                      = filebase64("${path.module}/ec2-init.sh")


https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/nat_gateway
https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/private-nat-gateway.html



https://github.com/e2eSolutionArchitect/terraform/tree/9a65103d9a66871f2d929fb1eef5d8670438a2b2/providers/aws/projects/e2esa-aws-ec2-autoscaling

https://github.com/e2eSolutionArchitect/terraform/blob/main/docs/terraform-docs-generator.md


https://github.com/pcasteran/terraform-graph-beautifier
terraform graph | docker run --rm -i --name terraform-graph-beautifier  ghcr.io/pcasteran/terraform-graph-beautifier:latest-linux --output-type=cyto-html > config.html

variable "vpc_cidr_block" {
  type        = string
  description = "CIDR block for the VPC"
  validation {
    condition     = can(regex("^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$", var.vpc_cidr_block))
    error_message = "Invalid VPC CIDR block."
  }
}

variable "mycidr" {
  type = map
  default = {
    subneta = "10.0.1.0/24"
    subnetb = "10.0.2.0/24"
  }
}
  cidr_block = var.mycidr["subnetb"]


  aws_ecs_cluster
  aws_instance
  aws_ecs_task_definition
  aws_ecs_service

  aws_launch_template
  aws_autoscaling_group

corrigir erro de rede
comunicação entre containers


DNS failover

Acesso Ec2 Instance Connect

aws ec2-instance-connect ssh --instance-id i-02974b74603a0a83b (apenas no cloudshell)

aws ssm start-session --target i-005332ecba8aaeca1 --document-name AWS-StartPortForwardingSessionToRemoteHost --parameters '{"host":["10.15.80.98"],"portNumber":["5432"],"localPortNumber":["5435"]}' --region us-east-2 --profile brunofreitas-UbuntuHome

aws ssm start-session --target i-02974b74603a0a83b

aws ssm start-session --target i-01d6492abd56ea793 --region eu-north-1

ssh -o "IdentitiesOnly=yes" -i Downloads/laboratorio-aws-2024-keys.pem ec2-user@localhost -p 2222

ssh -o "IdentitiesOnly=yes" -i .ssh/id_rsa.pub ec2-user@localhost -p 2222

aws rds generate-db-auth-token --hostname semanaconectividadeaws-db-mysql.c6uxh1t95jvm.us-east-2.rds.amazonaws.com --port 5432 --region us-east-2 --username admin

## aplicar a chave authorized_hosts temporariamente para habilitar o acesso
aws ec2-instance-connect send-ssh-public-key --instance-id i-0f22823e4ac5905bb --instance-os-user ec2-user --ssh-public-key file://.ssh/id_rsa.pub --availability-zone us-east-2a
aws ec2-instance-connect send-ssh-public-key --instance-id i-005332ecba8aaeca1 --instance-os-user ec2-user --ssh-public-key file://Downloads/laboratorio-aws-2024-keys.pem --availability-zone us-east-2c

aws ssm start-session --target i-005332ecba8aaeca1 --region us-east-2 --document-name AWS-StartInteractiveCommand --parameters "command=/bin/bash" --profile brunofreitas-UbuntuHome

    Acesso Via SSH
        Requisitos:
            Instância com acesso à internet e IP Público
            Regras Permissivas de Inbound
            Login com senha e/ou chave
            Openssh client no pc local
        Vantagens:
            Amplamente suportado e conhecido
            Configuração flexível de autenticação (senha ou chave)
            Controle granular sobre permissões de acesso

    Acesso Via SSM
        Requisitos:
            Instância com acesso à internet sem IP Público
            Permissões IAM na instância
            Permissões IAM para o usuário
            SSM client na instância destino
            AWS CLI e SSM plugin no pc local
            AWS profile local configurado
            Login com profile AWS
        Vantagens:
            Acesso seguro a instâncias sem a necessidade de IPs públicos
            Facilita a gestão remota de instâncias, incluindo execução de comandos e scripts
            Integração nativa com AWS IAM para controle de acesso

    Acesso Via EC2 Instance Connect
        Requisitos:
            Instância pode estar isolada (somente acesso à subnet local)
            EC2 Instance Connect Endpoint na mesma subnet da instância
            AWS CLI no pc local
        Vantagens:
            Facilita o acesso a instâncias mesmo em redes privadas ou isoladas
            Remove a necessidade de configuração de chaves SSH ou senhas
            Rastreabilidade e controle de acesso através do AWS IAM


            terraform {
              backend "bbb" {
                bucket = "meubucket"
                prefix = "terraform/state"
              }
            }

module "efs_backup" {
  source = "../../modules/efs"

  # File system
  name                   = "${var.desc_tags.project}-efs-${var.efs_name}"
  creation_token         = "${var.desc_tags.project}-efs-${var.efs_name}"
  encrypted              = true
  kms_key_arn            = aws_kms_key.efs.arn
  availability_zone_name = var.efs_availability_zone_name
  performance_mode       = "generalPurpose" #"maxIO"
  throughput_mode        = "bursting"

  # File system policy
  attach_policy                      = false
  bypass_policy_lockout_safety_check = false

  # Mount targets / security group
  mount_targets = {
    "${var.efs_availability_zone_name}" = {
      subnet_id = module.vpc_backup.public_subnets[0]
    }
  }
  security_group_description = "${var.desc_tags.project}-sg-efs"
  security_group_vpc_id      = module.vpc_backup.vpc_id
  security_group_rules = {
    vpc = {
      # relying on the defaults provdied for EFS/NFS (2049/TCP + ingress)
      description = "NFS ingress from VPC subnets"
      cidr_blocks = concat(module.vpc_backup.public_subnets_cidr_blocks, ["${var.efs_external_subnets}"])
    }
  }

  # Backup policy
  enable_backup_policy = false

  # Replication configuration
  create_replication_configuration = false

  tags = var.desc_tags
}

    

    feat
    fix
    docs
    style
    refactor
    test
    chore
    perf
    ci
    revert



    acesso via ssm
    usando nat gateway
    DNS
    loadbalance
    rds privado
    testar instance connect
    melhorar security groups

    depende fazer migrate